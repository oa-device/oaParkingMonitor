# Production Environment Configuration
# Optimized for real-world parking monitoring deployment

# Inherit from default and override specific settings
extends: "default.yaml"

# Service Configuration - Production logging
service:
  log_level: "WARNING"  # Only important messages

# Detection Configuration - Optimized for performance and accuracy
detection:
  confidence_threshold: 0.7  # High threshold to minimize false positives
  nms_threshold: 0.45  # Optimal NMS for vehicle detection
  target_fps: 30.000030  # Precise framerate for macOS USB cameras
  device: "auto"  # Automatic device selection (prefer GPU)
  batch_size: 4  # Higher batch size for efficiency
  
  optimization:
    level: "maximum"  # Maximum optimization
    model_caching: true
    frame_caching: true
    gpu_acceleration: true

# Camera Configuration - Production camera settings
camera:
  source: 0  # Primary camera
  resolution: [1920, 1080]  # Full HD for accurate detection
  fps: 30.000030  # Precise framerate for macOS USB cameras
  buffer_size: 1  # Minimal latency
  auto_exposure: true
  auto_focus: true
  
  # Optimized camera settings for parking lot conditions
  settings:
    brightness: 0.0  # Auto-adjust
    contrast: 0.6  # Enhanced contrast for vehicle detection
    saturation: 0.4  # Reduced saturation for better detection
    exposure_compensation: -0.2  # Slight underexposure for stability

# Parking Zones - Production configuration
parking_zones:
  auto_detect: true
  total_spaces: 0  # Auto-determined
  
  # These will be overridden by site-specific configuration
  zones: []

# Display Configuration - Clean production display
display:
  overlay_enabled: true
  overlay_opacity: 0.6  # Subtle overlay
  show_vehicle_info: false  # Clean display
  show_fps: false
  show_debug_info: false
  ad_integration: true

# Health Monitoring - Strict production thresholds
health_monitoring:
  enabled: true
  check_interval: 60  # Less frequent checks to reduce overhead
  metrics_retention_hours: 168  # 1 week retention
  performance_monitoring: true
  auto_recovery: true
  
  thresholds:
    min_fps: 25  # High FPS requirement
    max_memory_gb: 2  # Conservative memory usage
    max_cpu_percent: 60  # Leave plenty of headroom
    min_accuracy: 0.92  # Very high accuracy requirement
    max_detection_latency_ms: 80  # Low latency requirement

# Logging Configuration - Minimal production logging
logging:
  level: "WARNING"
  format: "structured"
  max_file_size: "25MB"  # Smaller log files
  max_files: 20  # Extended retention
  console_output: false  # No console output in production
  file_output: true
  
  files:
    main: "logs/parking_monitor.log"
    detection: "logs/detection.log"
    performance: "logs/performance.log"
    error: "logs/error.log"

# API Configuration - Production security
api:
  enabled: true
  cors_enabled: false  # Disabled for production security
  cors_origins: []
  
  rate_limiting:
    enabled: true
    requests_per_minute: 300  # High limit for dashboard integration
    burst_size: 50

# WebSocket Configuration - Optimized for production
websocket:
  enabled: true
  max_connections: 5  # Limited connections
  heartbeat_interval: 60  # Less frequent heartbeats

# Performance Configuration - Maximum performance
performance:
  memory_limit_gb: 2
  cpu_limit_percent: 60
  optimization_profile: "maximum"
  
  thermal_management:
    enabled: true
    temperature_threshold: 70  # Conservative temperature limit
    throttle_on_overheat: true

# Integration Configuration - Production integrations
integration:
  dashboard:
    enabled: true
    health_proxy: false  # Direct dashboard access
    metrics_export: true
  
  services:
    device_api:
      enabled: true
      url: "http://localhost:9090"
      retry_attempts: 2
      timeout_seconds: 5  # Fast timeout
    
    player:
      enabled: false  # Typically disabled in pure monitoring deployments
      overlay_integration: false

# Site Configuration - Production deployment
site:
  name: "Production Parking Monitor"
  location: "Production Site"
  environment: "production"

# Security Configuration
security:
  api_key_required: false  # Set via environment if needed
  ip_whitelist: []  # Configure via environment
  max_request_size_mb: 10
  request_timeout_seconds: 30

# Reliability Configuration
reliability:
  auto_restart_on_failure: true
  max_restart_attempts: 3
  restart_delay_seconds: 30
  health_check_failures_before_restart: 5
  
  # Graceful degradation
  degraded_mode:
    enabled: true
    reduced_fps: 15  # Fallback FPS if performance issues
    simplified_detection: true  # Use faster detection if needed

# Monitoring and Alerting - Production monitoring
monitoring:
  enabled: true
  metrics_export: true
  
  alert_thresholds:
    consecutive_failures: 2  # Quick alerting
    accuracy_drop_percent: 5  # Sensitive to accuracy drops
    latency_spike_ms: 100  # Low latency tolerance
    memory_usage_percent: 85
    cpu_usage_percent: 70
  
  # External monitoring integration
  external_monitoring:
    prometheus_enabled: false  # Enable via environment
    prometheus_port: 9100
    health_check_endpoint: "/health"

# Maintenance Configuration
maintenance:
  auto_cleanup_enabled: true
  log_retention_days: 30
  metrics_retention_days: 14
  cleanup_schedule: "0 2 * * *"  # Daily at 2 AM
  
  # Model updates
  model_update_check: false  # Manual updates only in production
  auto_model_update: false

# Backup Configuration
backup:
  config_backup_enabled: true
  metrics_backup_enabled: false  # Usually handled by external systems
  backup_retention_days: 90